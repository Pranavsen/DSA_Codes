
#include <bits/stdc++.h>
using namespace std;


#include <bits/stdc++.h>
using namespace std;
class node{
    public:
    int data;
    node* right;
    node* left;
};
node* newnode(int val){
    node* temp=new node;
    temp->data=val;
    temp->left=NULL;
    temp->right=NULL;
    return temp;
}
int idx=0;
map<int,int>mp;

    node* solve(int pre[],int in[],int lb,int ub){
        if(lb>ub) return NULL;
        node* res=newnode(pre[idx++]);
        if(lb==ub) return res;
        int mid=mp[res->data];
        res->left=solve(pre,in,lb,mid-1);
        res->right=solve(pre,in,mid+1,ub);
        return res;
        
    }
    node* build(int in[],int pre[], int n){
        for(int i=0;i<n;i++)   mp[in[i]]=i;   
        node* root= solve(pre,in,0,n-1);
            return root;
    }
    void display(node* root){
        if(root==NULL) return;
        cout<<root->data<<" ";
            display(root->left);
            display(root->right);
    }
    
    
int main()
{
    int in[]={3,1,4,0,5,2};
    int pre[]={0,1,3,4,2,5};
    int n=6;
    node* ans=build(in,pre,n);
    display(ans);
    return 0;
}


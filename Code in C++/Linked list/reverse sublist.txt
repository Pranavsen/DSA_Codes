//Linked List CPP
#include <iostream>
using namespace std;

class Node
{
public:
 int data;
 Node *next;
};

void create(Node* &first,int A[],int n)
{
 Node *last,*t;
 int i=0;

 first=new Node;
 first->data=A[0];
 first->next=NULL;
 last=first;
 
 for(i=1;i<n;i++)
 {
 t=new Node;
 t->data=A[i];
 t->next=NULL;
 last->next=t;
 last=t;
 }
}

void Display(Node* first)
{
 Node* p=first;

 while(p)
 {
 cout<<p->data<<"->";
 p=p->next;
 }
 cout<<endl;
}
Node* reverseBetween(Node* first,int start,int end){
    if(first==NULL || start==end) return first;
    Node* Dummy=new Node;
    Dummy->data=0;
    Dummy->next=first;
    Node* nodebeforesublist=Dummy;
    int pos=1;
    while(pos<start){
        nodebeforesublist=nodebeforesublist->next;
        pos++;
    }
    Node* workingptr=nodebeforesublist->next;
    while(start<end){
        Node* nodeExtract=workingptr->next;
        workingptr->next=nodeExtract->next;
        nodeExtract->next=nodebeforesublist->next;
        nodebeforesublist->next=nodeExtract;
        start++;
    }
    return Dummy->next;
} 

int main()
{ Node* first=NULL;
  
 int A1[]={1,2,3,4,5,6,7};
 create(first,A1,7);
 Display(first);
 Node* first1=reverseBetween(first,3,5);
 Display(first1);
 return 0;
}


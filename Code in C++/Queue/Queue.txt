#include <iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
};
class Queue{
    Node* front;
    Node* rear;
    public:
    Queue(){
            front=rear=nullptr;
        }
    void enqueue(int x){
        
        Node* t=new Node;
        if(t==NULL){
            cout<<"Overflow"<<endl;
        }
        else{
            t->data=x;
            t->next=NULL;
            if(front==NULL){
                front=rear=t;
            }
            else{
                rear->next=t;
                rear=t;
            }
        }
    }
    
    int dequeue(){
        int x=-1;
        Node*p;
        if(front==NULL){
            cout<<"Underflow"<<endl;
        }
        else{
            p=front;
            front=front->next;
            x=p->data;
            delete p;
        }
        return x;
    }
    void display(){
        Node* p=front;
        while(p){
            cout<<p->data<<"->";
            p=p->next;
        }
        cout<<endl;
    }
};


int main(){
    Queue q;
    q.enqueue(2);
    q.enqueue(4);
    q.enqueue(6);
    q.enqueue(8);
    q.enqueue(10);
    q.display();
    cout<<q.dequeue();
}
#include <iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
};
class Stack{
    Node* top;
    
    public:
    Stack(){
        top=nullptr;
    }
    
    void push(int x){
        Node *t=new Node;
        if(t==NULL){
            cout<<"Stack is Full"<<endl;
        }
        else{
            t->data=x;
            t->next=top;
            top=t;
        }
    }
    int pop(){
        Node *p;
        int x=-1;
        if(top==NULL){
          cout<<"Stack is Empty"<<endl;
        }
        else{
            p=top;
            x=p->data;
            top=top->next;
            delete p;
        }
        cout<<" ";
        return x;
        
    }
    
    
    int peek(int index){
        int x=-1;
        if(isEmpty()){
            return -1;
        }
        else{
            Node* p=top;
            for(int i=0;p!=NULL && i<index-1;i++){
                p=p->next;
            }
            if(p!=NULL){
                return p->data;
            }
            else{
                return -1;
            }
        }
    }
    
    int isFull(){
        Node* t=new Node;
        int r=t ? 1:0;
        delete t;
        return r;
    }
    
    int isEmpty(){
        return top ? 1:0;
    }
    void Display(){
        Node*p = top;
        while(p){
            cout<<p->data<<" ";
            p=p->next;
        }
        cout<<endl;
    }
};

int main()
{
    Stack s;
    s.push(2);
    s.push(5);
    s.push(6);
    s.push(8);
    s.push(10);
    s.Display();
    cout<<s.pop();
    
    return 0;
}